main {
    margin: 2rem auto;
    width:50rem;
    border:2px solid gray;
}

body {
    font-family:Verdana, sans-serif;
}

.logo-and-header {
    display:flex;
    justify-content: center;
    align-items: center; /*This centers text of the p element and padding values of texts overlap. 
    That's why it eliminates unnecessary orange background that goes to bottom. Instead of this command, we can add 
    height value of p element at ".logo-and-header p" */
}

.logo-and-header span {
    display:block;
    font-size:16px;
    text-align: center;
}

.logo-and-header p{
    margin: 0.5rem 0.5rem 0.5rem 0.5rem;
    text-align: center;
    width:6rem;
    background:linear-gradient()
    font-weight: bold;
    background:orange;
    box-shadow: 0px 0px 20px 5px yellow;
    color:white;
}

.product-type {
    display:flex;
    justify-content: right;
    gap:1rem;
    padding: 0.25rem 1.50rem 0.25rem 0;
    background:orange;
    color:white;
    position:sticky; 
    top:0; 
    z-index: 1; /*This prevents the product-type row from being overlapped by another row of the table.*/
}

table{
    margin: 3rem 0;
    border-collapse: collapse; /*Removes border lines between the cells.*/ 
    position: relative; /*This prevents table caption from changing its position in a 
    table and also 3 caption elements will not overlap.*/
    width:100%;  /*It is important to make it cover 100% of its container.*/
}

.tables {
    padding:0 1rem 0 1rem; /*Applies padding to container that is related with tables class. 
    We need to apply padding to child element if we want to adjust alignment of any child 
    element of this container. */
}

table caption {
    font-weight: bold;
    font-size:24px;
    position:absolute;
    top:-2rem;
}

.description {
    font-weight: normal;
}

span.description {
    display:block;
    padding:0.75rem 0; 
}

tr th {
    text-align: left;
    padding-left:0.5rem;
}

tr.data{
 background-image:linear-gradient(to bottom, orange 1.75rem, white 1.5rem);
}

tr.data:hover{
    background-image:linear-gradient(to bottom, lightblue 1.75rem, white 1.5rem);
    border:2px solid gray;
    padding:2px;
   }

tr.data td {
    vertical-align: top;
    text-align: center;
}
  
tbody td {     /*Making sure that the datacells will have fixed width values.*/
    width: 100vw;
    min-width: 5rem;
    max-width: 5rem;
  }
  
tr.data td:nth-of-type(2) {
    padding-right:0.91rem;
}

tr.data td:first-of-type {
    padding-right:0.91rem;
}

tr.data td:last-of-type {
    padding-right:0.91rem;
}